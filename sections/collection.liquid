{% paginate collection.products by 4 %}
  <section class="collection-sec">
    <div>
      <select id="sort-by">
        {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
        {% for option in collection.sort_options %}
          <option
            value="{{ option.value }}"
            {% if option.value == sort_by %}
              selected="selected"
            {% endif %}
          >
            {{ option.name }}
          </option>
        {% endfor %}
      </select>
    </div>
    <div>
      <h1>Collections</h1>
      <p>{{ collection.title }}</p>
      <div class="products-grid">
        {% for product in collection.products %}
          <div class="product-card">
            <img width="100%" height="auto" loading="lazy" src="{{ product.featured_image | image_url }}">
            <h3>{{- product.title | link_to: product.url -}}</h3>
          </div>
        {% endfor %}
      </div>
    </div>
  </section>

  {{ paginate | default_pagination }}
{% endpaginate %}

<script>
  Shopify.queryParams = {};

  // Preserve existing query params
  if (location.search.length) {
    const params = location.search.substring(1).split('&');
    console.log(`This is the params variable --> ${params}`);

    for (let i = 0; i < params.length; i++) {
      const keyValue = params[i].split('=');
      console.log(`This is the Key Value variable --> ${keyValue}`);

      if (keyValue.length) {
        console.log((Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1])));
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function (e) {
    const value = e.target.value;

    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>

<style>
  .collection-sec {
      background-color: {{ section.settings.background }};
      color: {{ section.settings.text }};
      padding: 10px;
      display: flex;
      justify-content: space-between;
  }

  .products-grid {
    display: grid;
    grid: auto-flow / repeat(3, 1fr);
    gap: 20px;
  }

  .product-card {
    border: 1px solid #ddd;
    padding: 10px;
    text-align: center;
    }

    .product-card img {
        max-width: 100%;
        height: auto;
    }
</style>

{% schema %}
{
  "name": "collection",
  "settings": [
    {
      "type": "color",
      "id": "background",
      "label": "Background Color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "text",
      "label": "Text Color",
      "default": "#000000"
    }
  ]
}
{% endschema %}
